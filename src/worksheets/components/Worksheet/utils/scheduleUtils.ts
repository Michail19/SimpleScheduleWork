import type { Schedule } from '../types';

export const calculateWorkHours = (schedule: Record<string, Schedule>): string => {
    let totalHours = 0;

    Object.values(schedule).forEach((item) => {
        if (!item?.start || !item?.end) return; // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –∑–∞–ø–∏—Å–∏

        const startTime = new Date(`1970-01-01T${item.start}:00`);
        const endTime = new Date(`1970-01-01T${item.end}:00`);

        if (endTime >= startTime) {
            // –û–±—ã—á–Ω–∞—è —Å–º–µ–Ω–∞ (–≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –æ–¥–Ω–æ–≥–æ –¥–Ω—è)
            totalHours += (endTime.getTime() - startTime.getTime()) / (1000 * 60 * 60);
        } else {
            // üîπ –ù–æ—á–Ω–∞—è —Å–º–µ–Ω–∞ (–ø–µ—Ä–µ—Ö–æ–¥ —á–µ—Ä–µ–∑ –ø–æ–ª–Ω–æ—á—å)
            const midnight = new Date("1970-01-02T00:00:00");

            // –ß–∞—Å—ã –¥–æ –ø–æ–ª—É–Ω–æ—á–∏
            totalHours += (midnight.getTime() - startTime.getTime()) / (1000 * 60 * 60);

            // –ß–∞—Å—ã –ø–æ—Å–ª–µ –ø–æ–ª—É–Ω–æ—á–∏
            totalHours += (endTime.getTime() - new Date("1970-01-01T00:00:00").getTime()) / (1000 * 60 * 60);
        }
    });

    // –û–∫—Ä—É–≥–ª—è–µ–º –∫—Ä–∞—Å–∏–≤–æ
    let result = totalHours.toFixed(1);
    if (result[result.length - 1] != '0') return result;
    else return Math.round(totalHours).toString();
};
